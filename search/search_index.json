{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#installation","title":"Installation","text":"<p>Step 1: Clone the git repositories <pre><code>git clone https://github.com/grotjahnlab/surface_morphometrics.git\n</code></pre></p> <p>Step 2: Go to the surface morphometrics directory <pre><code>cd surface_morphometrics\n</code></pre></p> <p>Step 3: Install conda enviroment <pre><code>conda env create -f environment.yml\n</code></pre></p> <p>Step 4: Install additional dependencies  <pre><code>pip install -r pip_requirements.txt\n</code></pre></p> <p>Step 5: exit the surface morphometrics directory <pre><code>cd ..\n</code></pre></p> <p>Step 6: Clone the GUI repository <pre><code>git clone https://github.com/baradlab/surface-morphometrics-gui.git\n</code></pre></p> <p>Step 7: Go to the GUI directory  <pre><code>cd surface-morphometrics-gui\n</code></pre></p> <p>Step 8: Run the GUI  <pre><code>python main.py\n</code></pre></p>"},{"location":"about/","title":"About Surface Morphometrics GUI","text":""},{"location":"about/#project-overview","title":"Project Overview","text":"<p>The Surface Morphometrics GUI is a graphical user interface for the Surface Morphometrics toolkit, designed to simplify the quantitative analysis of 3D surface meshes from cryo-electron tomography (cryo-ET). This tool provides researchers with an accessible interface for complex geometric analysis without requiring command-line programming expertise.</p>"},{"location":"about/#what-is-surface-morphometrics","title":"What is Surface Morphometrics?","text":"<p>Surface morphometrics is the quantitative analysis of surface geometry and topology, specifically focused on biological membranes and cellular structures. The toolkit generates robust open mesh surfaces from voxel segmentations and calculates morphological features including:</p> <ul> <li>Curvature Analysis: Gaussian, mean, and principal curvatures using pycurv's vector voting framework</li> <li>Distance Measurements: Intra- and inter-surface distances and orientations</li> <li>Topological Features: Surface connectivity and structural relationships</li> </ul>"},{"location":"about/#technical-architecture","title":"Technical Architecture","text":""},{"location":"about/#core-components","title":"Core Components","text":"<p>The GUI provides access to the underlying Surface Morphometrics toolkit:</p> <ul> <li>Mesh Generation: Robust surface reconstruction using Screened Poisson algorithm</li> <li>Curvature Calculation: Pycurv-based vector voting framework for accurate curvature measurement</li> <li>Distance Analysis: Intra- and inter-surface distance and orientation calculations</li> <li>3D Visualization: Interactive 3D rendering of surfaces and quantification results</li> </ul>"},{"location":"features/new-experiment/","title":"New Experiment","text":""},{"location":"features/new-experiment/#new-experiment","title":"New Experiment","text":"<p>Set up and manage experiments from the GUI. This page explains what you need, when the action button enables, what happens when creating a new experiment, and how resuming works.</p>"},{"location":"features/new-experiment/#what-you-provide","title":"What you provide","text":"<ul> <li>Work Directory: Parent folder where all experiments live.</li> <li>Experiment Name: A new name to create, or select an existing one to resume.</li> <li>Data Directory: Folder containing your input data.</li> <li>Config Template File: A YAML template (from the main repository or your own).</li> </ul>"},{"location":"features/new-experiment/#when-the-button-enables","title":"When the button enables","text":"<p>The \"New Experiment\" (or \"Resume Experiment\") button enables only when all of the following are set: - Work Directory - Non-empty Experiment Name - Config Template File (.yml or .yaml) - Data Directory</p>"},{"location":"features/new-experiment/#create-a-new-experiment","title":"Create a new experiment","text":"<ol> <li>Choose a Work Directory.</li> <li>Enter a unique Experiment Name.</li> <li>Select your Data Directory.</li> <li>Pick a Config Template File. The template is read and the UI (including segmentation values, if present) is populated so you can review/edit before creation.</li> <li>Click New Experiment.</li> </ol> <p>What happens under the hood:</p> <ul> <li>A folder named after your Experiment Name is created inside the Work Directory.</li> <li>Your chosen template is copied into that folder as <code>&lt;experiment_name&gt;_config.yml</code>.</li> <li> <p>The copied config is personalized with:</p> <ul> <li><code>data_dir</code>: your selected Data Directory</li> <li><code>work_dir</code>: the new experiment folder path</li> <li><code>exp_name</code>: your Experiment Name</li> <li><code>cores</code>: value from the Cores input</li> <li><code>segmentation_values</code>: values from the Segmentation section in the UI</li> <li>On success, a confirmation message is shown. If any step fails (e.g., missing paths or invalid YAML), an error dialog explains what went wrong.</li> </ul> </li> </ul>"},{"location":"features/new-experiment/#resume-an-existing-experiment","title":"Resume an existing experiment","text":"<p>If you select a name that already exists inside the Work Directory (its folder contains a <code>*_config.yml</code> or <code>config.yml</code>):</p> <ul> <li>The button switches to Resume Experiment.</li> <li>The manager loads the experiment's config, prefills the UI (including segmentation values when present), and points fields to the existing locations.</li> <li>If the stored config lacks <code>config_template</code>, the manager treats the existing config file in the experiment folder as the template reference for the UI.</li> </ul>"},{"location":"features/new-experiment/#notes","title":"Notes","text":"<ul> <li>You can use a template from the main Surface Morphometrics repository or bring your own; either way, it's copied into the experiment folder and customized.</li> <li>Segmentation label\u2013value pairs you see in the UI are written into the created config and reloaded when resuming.</li> </ul>"},{"location":"features/resume-experiment/","title":"Resume Experiment","text":""},{"location":"features/resume-experiment/#resume-experiment","title":"Resume Experiment","text":"<p>Pick up where you left off. This page explains how resume is detected, what state is loaded, and how tabs reflect progress.</p>"},{"location":"features/resume-experiment/#how-resume-is-triggered","title":"How resume is triggered","text":"<ul> <li>Select a Work Directory that contains your experiment folder.</li> <li>Choose an existing Experiment Name (folder with <code>*_config.yml</code> or <code>config.yml</code>).</li> <li>The action button switches to Resume Experiment; click it to load the config.</li> </ul>"},{"location":"features/resume-experiment/#what-gets-loaded","title":"What gets loaded","text":"<ul> <li>Loads <code>&lt;exp_dir&gt;/*_config.yml</code>, or falls back to <code>&lt;exp_dir&gt;/config.yml</code>.</li> <li>Applies to the UI when present: <code>data_dir</code>, <code>config_template</code> (or uses the loaded config path), <code>cores</code>, <code>segmentation_values</code>.</li> <li>Emits a global <code>config_loaded</code> event so job tabs refresh.</li> </ul>"},{"location":"features/resume-experiment/#how-tabs-update-on-resume","title":"How tabs update on resume","text":"<ul> <li>Mesh Generation<ul> <li>Reads mesh settings from <code>surface_generation</code> if present.</li> <li>Infers completion by checking <code>&lt;exp_dir&gt;/results</code> for <code>*.ply</code>, <code>*.surface.vtp</code>, or <code>*.xyz</code>.</li> <li>Status: Completed (files found) or Not Started (none).</li> </ul> </li> <li>PyCurv (Curvature)<ul> <li>Status set to Ready; progress 0.</li> <li>Re-populates VTP list by searching <code>&lt;exp_dir&gt;</code>, then <code>meshes</code>, then <code>results</code> for <code>*.surface.vtp</code>/<code>*.SURFACE.VTP</code>.</li> </ul> </li> <li>Distance/Orientation<ul> <li>Status set to Ready; progress 0.</li> <li>Loads <code>distance_and_orientation_measurements</code> settings if present.</li> </ul> </li> </ul>"},{"location":"tutorials/pipeline/","title":"Pipeline Tutorial","text":"<p>This tutorial will guide you through the complete workflow of using the Surface Morphometrics GUI.</p>"},{"location":"tutorials/pipeline/#prerequisites","title":"Prerequisites","text":"<p>Before starting this tutorial, make sure you have: - Successfully installed the Surface Morphometrics GUI (see Installation Guide)</p>"},{"location":"tutorials/pipeline/#getting-started","title":"Getting Started","text":""},{"location":"tutorials/pipeline/#step-1-activate-the-environment","title":"Step 1: Activate the Environment","text":"<p>Activate the conda environment that was created during installation. If you successfully activated the environment, you should see the name of the environment (<code>(morphometrics)</code>) to the left of your prompt.</p> <pre><code>conda activate morphometrics\n</code></pre>"},{"location":"tutorials/pipeline/#step-2-launch-the-gui","title":"Step 2: Launch the GUI","text":"<p>Launch the GUI from the command line using the command below.</p> <pre><code># Enter the surface morphometrics GUI directory and navigate to source directory\ncd surface-morphometrics-gui/src\n# Launch GUI\npython main.py\n</code></pre> <p></p>"},{"location":"tutorials/pipeline/#step-3-create-a-new-experiment","title":"Step 3: Create a New Experiment","text":"<p>Once the GUI is loaded, you'll see the experiment manager panel on the right side. Here's how to set up a new experiment:</p> <ol> <li>Work Directory: Select a location where all experiment-related data and results will be saved. For best results, create a new folder inside the surface-morphometrics directory and set that as your Work Directory.</li> <li>Experiment Name: Give your experiment a descriptive name</li> <li>Data Directory: Select the location of your dataset that you want to analyze with surface morphometrics</li> <li>Config Template: Choose the master configuration template (this will be edited through the GUI for your specific experiment)</li> <li>Core: Select the number of CPU cores you want to use for processing</li> </ol> <p>After filling in all the required fields, click the \"New Experiment\" button to create your experiment.</p> <p></p>"},{"location":"tutorials/pipeline/#step-4-surface-reconstruction","title":"Step 4: Surface Reconstruction","text":"<p>The system will now run surface reconstructions for all the segmentations from the provided data directory. </p> <p>On the right-hand side, you'll see a highlighted tab where you can edit the configuration related to surface mesh generation. This is where you can adjust parameters that control how the surface meshes are generated from your segmentation data.</p> <p></p>"},{"location":"tutorials/pipeline/#step-5-running-pycurv-for-each-surface","title":"Step 5: Running Pycurv for Each Surface","text":"<p>The system now runs Pycurv analysis for each generated surface. This step utilizes parallel processing based on the number of cores you specified during experiment setup.</p> <p>Processing Options:</p> <ul> <li>Run on All: Process all surfaces simultaneously using available cores</li> <li>Run One by One: Process surfaces sequentially</li> </ul> <p>Core Utilization: - If utilizing maximum cores, additional files will be placed on standby - As each analysis completes, the next file in the queue automatically begins processing</p> <p></p>"},{"location":"tutorials/pipeline/#step-6-measure-intra-inter-surface-distances-and-orientations","title":"Step 6: Measure Intra-Inter Surface Distances and Orientations","text":"<p>In this step, the system measures the intra-inter surface distances and orientations between the analyzed surfaces. - Adjust the measurement parameters as needed for your specific analysis requirements - Configure distance thresholds and tolerance</p> <p></p>"},{"location":"tutorials/visualization/","title":"Visualization Guide","text":"<p>This guide covers how to visualize results from your Surface Morphometrics analysis.</p>"},{"location":"tutorials/visualization/#dataset-preview","title":"Dataset Preview","text":"<p>When setting up a new experiment as described in the Pipeline Guide, one of the segmentations from your selected data directory is automatically displayed. This preview allows you to verify that you're working with the correct dataset before proceeding with the analysis.</p> <p></p>"},{"location":"tutorials/visualization/#editing-segmentation-values","title":"Editing Segmentation Values","text":"<p>On the right-hand side tab, you'll find a section to add or edit segmentation values. This is where you can input associated segmentation values with descriptive labels.</p> <p>Important Note: Once you select a config template, the GUI automatically populates the segmentation values based on the template's default settings. Make sure to review and edit these values to match your specific data requirements before proceeding with the analysis.</p> <p></p>"},{"location":"tutorials/visualization/#visualizing-meshes","title":"Visualizing Meshes","text":"<p>After running Step 4 (Surface Reconstruction) from the Pipeline Guide, you can visualize the generated meshes in 3D.</p> <p>Loading Meshes: - On the left-hand side, you'll see a highlighted section with an option to load meshes - Pick the specific mesh you want to visualize from the available options</p> <p>3D Rendering Mode: - Once a mesh is loaded, locate the \"n display\" button highlighted in the lower left corner - Click this button to enter 3D rendering mode - The volume will be displayed in full 3D view - Click and drag to rotate the 3D view around the mesh</p>"},{"location":"tutorials/visualization/#visualizing-3d-mapping-of-quantification","title":"Visualizing 3D Mapping of Quantification","text":"<p>After the quantification step in the pipeline, you can visualize the 3D mapping of your analysis results.</p> <p>Loading Quantified Meshes: - Follow the same steps as above to load the appropriate surface meshes file - The file will contain the quantification results from your analysis - Once loaded, the mesh will be rendered in 3D view</p> <p>Property Visualization: - Use the dropdown menu to select which property values you want to visualize - Different morphometric measures (curvature, distance, etc.) can be displayed as color maps on the 3D surface - Use the slider in the same section to adjust contrast values</p>"},{"location":"tutorials/visualization/#loading-structures-onto-meshes","title":"Loading Structures onto Meshes","text":"<p>The Protein Loader tab (highlighted on the right) provides tools to load and position structural data onto your ribosome meshes.</p> <p>Loading Files: - Load MRC File: Load the structure file itself (the protein structure) - Load STAR File: Load the file containing location coordinates and orientation information for the structures</p> <p>Coordinate Extraction: - Select the specific tomogram layer on the left side panel - Press \"Extract Coordinates\" to get information about the number of structures associated with the selected tomogram</p> <p>Visualizing Structures: - Use the \"Show Structure\" button to display copies of the structure - Structures will be positioned with the correct orientation based on the coordinate data - This allows you to see how proteins are positioned relative to your surfaces</p>"}]}